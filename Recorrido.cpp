#include "Recorrido.h"


Recorrido::Recorrido(int jugadorasignado) : jugadorasignado(jugadorasignado) {

    std::vector<float> rojos_x={0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,0,0,0,0,0,0,0,0,0,0,0,0};
    std::vector<float> rojos_y={37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,37.75,0,0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,37.75,37.75,37.75,37.75,37.75,37.75,37.75,37.75,37.75,37.75,37.75,37.75};

    std::vector<float> verdes_x={37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,37.75,0,0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,37.75,37.75,37.75,37.75,37.75,37.75};
    std::vector<float> verdes_y={0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,37.75,0,0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,0,0,0,0,0,0};

    std::vector<float> amarillas_x={0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,37.75,0,0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,0,0,0,0,0,0};
    std::vector<float> amarillas_y={-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,37.75,0,0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75};

    std::vector<float> azules_x={-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,37.75,0,0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75};
    std::vector<float> azules_y={0,0,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,0,0,0,0,0,-37.75,-37.75,-37.75,-37.75,-37.75,-37.75,0,0,37.75,37.75,37.75,37.75,37.75,37.75,0,0,0,0,0,37.75,0,0,0,0,0,0};

    switch(jugadorasignado){
        case 1:{
            for(int i=0;i< 56;i++){
                par p;
                p.first=rojos_x[i];p.second=rojos_y[i];
                recorrido.push_back(p);}
            break;
        }
        case 2:{
            for(int i=0;i<56;i++){
                par p;
                p.first=verdes_x[i];p.second=verdes_y[i];
                recorrido.push_back(p);
            }
            break;
        }
        case 3:{
            for(int i=0;i< 56;i++){
                par p;
                p.first=azules_x[i];p.second=azules_y[i];
                recorrido.push_back(p);
            }
            break;
        }
        case 4:{
            for(int i=0;i< 56;i++){
                par p;
                p.first=amarillas_x[i];p.second=amarillas_y[i];
                recorrido.push_back(p);
            }
            break;
        }
    }

}

int Recorrido::getJugadorasignado() const {
    return jugadorasignado;
}

void Recorrido::setJugadorasignado(int jugadorasignado) {
    Recorrido::jugadorasignado = jugadorasignado;
}

pares_ordenados Recorrido::getRecorrido() const {
    return recorrido;
}

void Recorrido::setRecorrido(pares_ordenados recorrido) {
    Recorrido::recorrido = recorrido;
}

